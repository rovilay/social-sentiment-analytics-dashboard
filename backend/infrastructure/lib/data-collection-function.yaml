Parameters:
  BucketName:
    Type: String
    Description: Unique name for the S3 bucket
  TwitterAPISecret:
    Type: String
    Description: Twitter credentials
Resources:
  DataCollectionCodeExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DataCollectionExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetItem
                Resource: !Sub arn:aws:s3:::${BucketName}/data-collection-function.zip
                  - !Ref BucketName
        - PolicyName: AccessTwitterSecrets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref TwitterAPISecret
  DataCollectionFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        ZipFile: !Sub s3://${BucketName}/data-collection-function.zip
      Handler: index.handler
      Runtime: nodejs22.x
      Role: !GetAtt DataCollectionCodeExecutionRole.Arn
      # Policies:
      #   - PolicyName: DataCollectionLogPolicy
      #     PolicyDocument:
      #       Version: '2012-10-17'
      #       Statement:
      #         - Effect: Allow
      #           Action:
      #             - logs:CreateLogGroup
      #             - logs:CreateLogStream
      #             - logs:PutLogEvents
      #           Resource: arn:aws:logs:*:*:*
      Environment:
        Variables:
          TWITTER_API_KEY: !Sub '{{resolve:secretsmanager:${TwitterAPISecret}:SecretString:TWITTER_API_KEY}}'
          TWITTER_API_SECRET: !Sub '{{resolve:secretsmanager:${TwitterAPISecret}:SecretString:TWITTER_API_SECRET}}'
  DataCollectionEventRole:
    Type: AWS::IAM::Role
    DependsOn:
      - DataCollectionFunction
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'events.amazonaws.com'
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DataCollectionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'lambda:InvokeFunction'
                Resource: !GetAtt DataCollectionFunction.Arn
